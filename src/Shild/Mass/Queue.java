package Shild.Mass;

public class Queue {
    char q[];   // массив для хранения элементов очереди
    int putloc; // индекс для вставки элемента в очередь, в какое место будет помещен следующий элемент
    int getloc; // индекс для излечения элемента очереди, место от куда будет извелечен очередной элемент очереди

    // создает очередь заданного размера
    Queue(int size) {

        // особенности реализации очереди,
        // один элемент массива остается не использованным
        q = new char[size + 1]; // выделить память для очереди
        putloc = getloc = 0;
    }

    // метод помещающий элемент в очередь
    void put(char ch) {
        //проверяет не переполнена ли очередь,
        //если putloc соответсвует последнему элементу массива,
        // то места для размещения новых элементов в очереди нет
        if (putloc == q.length - 1) {
            System.out.println(" - Очередь заполнена");
            return;
        }
        // если не переполнина очередь,
        // то putloc увеличивается и новый элемент располагается в указаном место массива,
        // переменная putloc всегда содержит индекс элемента, помещенного в очередь последним
        putloc++;
        q[putloc] = ch;
    }

    // метод извлечения символа из очереди
    char get() {
        if (getloc == putloc) { // проверяется пуста ли очереидь, т.к. в конструкторе putloc = getloc = 0;
            System.out.println(" - Очередь пуста");
            return (char) 0;
        }
        // если очередь не пуста ,то переменная getloc увеличивается
        // и из нее излекается очередной элемент,
        // содержит индекс последнего извлеченного элемента
        getloc++;
        return q[getloc];
    }


}
